{"version":3,"sources":["lib/LinearGradient.js","lib/BoxBinPlot.js","lib/index.js","index.js"],"names":["LinearGradient","stops","Object","classCallCheck","this","length","TypeError","_stops","sort","a","b","x","_Xs","map","_ref","Xs","leftIdx","bisect_left","rightIdx","bisect_right","stop","Math","round","r","g","leftStop","rightStop","Error","YRANGE_LUT","0-50","from","to","50-60","60-70","70-80","80-90","90-100","100-110","110-120","120-200","YRANGES","keys","SPAN_LUT","hour","day","week","RESOLUTIONS","LINEAR_GRADIENT","BoxBinPlot","props","_this","possibleConstructorReturn","getPrototypeOf","call","getGridCells","memoize_one","data","grids","_i","_RESOLUTIONS","resolution","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","column","value","startX","endX","_i2","_YRANGES","row","count","color","getColor","yRange","startY","endY","push","err","return","ref","React","createRef","_this$props","width","height","react_default","createElement","style","display","draw","_this$props2","minX","maxX","minY","maxY","gridCells","getResolution","console","log","ctx","current","getContext","clearRect","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","cell","startDomX","toDomXCoord_Linear","endDomX","startDomY","endDomY","fillStyle","fillRect","_LINEAR_GRADIENT$getR","getRGB","concat","curMinDiff","Infinity","curRes","_i3","_RESOLUTIONS2","cellWidth","diffWidth","abs","PureComponent","generateData","period","start","floor","end","i","random","DATA","App","state","data_","_this2","_this$state","Fragment","type","min","max","onChange","ev","setState","Number","parseInt","target","step","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"iOAmDeA,aAhDb,SAAAA,EAAYC,GACV,GADiBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACE,IAAfC,EAAMI,OACR,MAAM,IAAIC,UAAU,cAEtBF,KAAKG,OAASN,EAAMO,KAAM,SAACC,EAAEC,GAAH,OAAOD,EAAEE,EAAED,EAAEC,IACvCP,KAAKQ,IAAMR,KAAKG,OAAOM,IAAK,SAAAC,GAAA,OAAAA,EAAEH,uDAGzBA,GACL,IAAII,EAAKX,KAAKQ,IACVX,EAAQG,KAAKG,OACjB,GAAmB,IAAfN,EAAMI,OACR,OAAO,KAET,IAAIW,EAAUC,sBAAYF,EAAGJ,GACzBO,EAAWC,uBAAaJ,EAAGJ,GAC/B,GAAIO,EAASF,GAAS,EAAI,CACxB,IACII,EAAOnB,EADSoB,KAAKC,OAAOJ,EAASF,GAAS,IAGlD,MAAO,CAACO,EADMH,EAATG,EACKC,EADIJ,EAAPI,EACKd,EADEU,EAALV,GAGN,GAAIQ,EAASF,IAAU,EAAE,CAC5B,IAAe,IAAXA,EAAa,CACf,IAAII,EAAOnB,EAAMiB,GAEjB,MAAO,CAACK,EADMH,EAATG,EACKC,EADIJ,EAAPI,EACKd,EADEU,EAALV,GAGN,GAAIQ,IAAWjB,EAAMI,OAAO,CAC/B,IAAIe,EAAOnB,EAAMe,GAEjB,MAAO,CAACO,EADMH,EAATG,EACKC,EADIJ,EAAPI,EACKd,EADEU,EAALV,GAIT,IAAIe,EAAWxB,EAAMe,GACjBU,EAAYzB,EAAMiB,GAItB,MAAO,CAACK,EAHAF,KAAKC,MAAMG,EAASF,GAAGG,EAAUH,EAAEE,EAASF,IAAIG,EAAUf,EAAEc,EAASd,IAAIA,EAAEc,EAASd,IAGlFa,EAFFH,KAAKC,MAAMG,EAASD,GAAGE,EAAUF,EAAEC,EAASD,IAAIE,EAAUf,EAAEc,EAASd,IAAIA,EAAEc,EAASd,IAEhFD,EADJW,KAAKC,MAAMG,EAASf,GAAGgB,EAAUhB,EAAEe,EAASf,IAAIgB,EAAUf,EAAEc,EAASd,IAAIA,EAAEc,EAASd,KAK9F,MAAM,IAAIgB,MAAM,6BCvChBC,EAAa,CACjBC,OAAQ,CAACC,KAAK,EAAGC,GAAG,IACpBC,QAAS,CAACF,KAAK,GAAIC,GAAG,IACtBE,QAAS,CAACH,KAAK,GAAIC,GAAG,IACtBG,QAAS,CAACJ,KAAK,GAAIC,GAAG,IACtBI,QAAS,CAACL,KAAK,GAAIC,GAAG,IACtBK,SAAU,CAACN,KAAK,GAAIC,GAAG,KACvBM,UAAW,CAACP,KAAK,IAAKC,GAAG,KACzBO,UAAW,CAACR,KAAK,IAAKC,GAAG,KACzBQ,UAAW,CAACT,KAAK,IAAKC,GAAG,MAGrBS,EAAUtC,OAAOuC,KAAKb,GAEtBc,EAAW,CACfC,KAAQ,KACRC,IAAO,MACPC,KAAQ,QAGJC,EAAc5C,OAAOuC,KAAKC,GAE1BK,EAAkB,IAAI/C,EAAe,CAAC,CAACW,EAAE,EAAEY,EAAE,IAAIC,EAAE,EAAEd,EAAE,GAAG,CAACC,EAAE,IAAIY,EAAE,IAAIC,EAAE,IAAId,EAAE,KC3BtEsC,cD8Bb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IAChBE,EAAAhD,OAAAiD,EAAA,EAAAjD,CAAAE,KAAAF,OAAAkD,EAAA,EAAAlD,CAAA8C,GAAAK,KAAAjD,KAAM6C,KA8CRK,aAAeC,sBAAa,SAACC,GAK3B,IAJA,IAAIC,EAAQ,CAAEd,KAAK,GACLC,IAAI,GACJC,KAAK,IAEnBa,EAAA,EAAAC,EAAuBb,EAAvBY,EAAAC,EAAAtD,OAAAqD,IAAoC,CAA/B,IAAIE,EAAUD,EAAAD,GAAiBG,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAClC,QAAAC,EAAAC,EAAmBV,EAAKI,GAAxBO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAGE,IAHmC,IAA5BU,EAA4BN,EAAAO,MAC/BC,EAASF,EAAM,KACfG,EAAOH,EAAM,GACjBI,EAAA,EAAAC,EAAgBpC,EAAhBmC,EAAAC,EAAAvE,OAAAsE,IAAyB,CAApB,IAAIE,EAAGD,EAAAD,GACNG,EAAQP,EAAOM,GACfE,EAAQ7B,EAAK8B,SAASF,GACtBG,EAASrD,EAAWiD,GACpBK,EAASD,EAAM,KACfE,EAAOF,EAAM,GACjBxB,EAAMG,GAAYwB,KAAK,CAACX,SAAOC,OAAKQ,SAAOC,OAAKJ,WAVlB,MAAAM,GAAAvB,GAAA,EAAAC,EAAAsB,EAAA,YAAAxB,GAAA,MAAAK,EAAAoB,QAAApB,EAAAoB,SAAA,WAAAxB,EAAA,MAAAC,IAcpC,OAAON,IAhEPP,EAAKqC,IAAMC,IAAMC,YAFDvC,wEAKV,IAAAwC,EACetF,KAAK6C,MAArB0C,EADCD,EACDC,MAAMC,EADLF,EACKE,OACX,OACEC,EAAApF,EAAAqF,cAAA,UAAQP,IAAKnF,KAAKmF,IAAKI,MAAOA,EAAOC,OAAQA,EAAQG,MAAO,CAACC,QAAQ,uDAKvE5F,KAAK6F,oDAIL7F,KAAK6F,sCAGD,IAAAC,EAIU9F,KAAK6C,MAHb0C,EADFO,EACEP,MAAMC,EADRM,EACQN,OACNO,EAFFD,EAEEC,KAAKC,EAFPF,EAEOE,KACLC,EAHFH,EAGEG,KAAKC,EAHPJ,EAGOI,KACL9C,EAJF0C,EAIE1C,KACF+C,EAAYnG,KAAKkD,aAAaE,GAC9BI,EAAaxD,KAAKoG,cAAcb,EAAMQ,EAAKC,GAC/CK,QAAQC,IAAI9C,GAEZ,IACI+C,EADSvG,KAAKmF,IAAIqB,QACLC,WAAW,MAC5BF,EAAIG,UAAU,EAAE,EAAEnB,EAAMC,GAXpB,IAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAAjD,EAAA,IAaJ,QAAAkD,EAAAC,EAAiBZ,EAAU3C,GAA3BO,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAuC,KAA9BK,EAA8BF,EAAA1C,MAChCC,EAAiC2C,EAAjC3C,OAAOC,EAA0B0C,EAA1B1C,KAAKQ,EAAqBkC,EAArBlC,OAAOC,EAAciC,EAAdjC,KAAKJ,EAASqC,EAATrC,MAC7B,KAAIL,GAAMyB,GAAQ1B,GAAQ2B,GAA1B,CAGA,IAAIiB,EAAYhG,KAAKC,MAAMgG,6BAAmB3B,EAAMQ,EAAKC,EAAK3B,IAC1D8C,EAAUlG,KAAKC,MAAMgG,6BAAmB3B,EAAMQ,EAAKC,EAAK1B,IACxD8C,EAAYnG,KAAKC,MAAMgG,6BAAmB1B,EAAOS,EAAKC,EAAKnB,IAC3DsC,EAAUpG,KAAKC,MAAMgG,6BAAmB1B,EAAOS,EAAKC,EAAKpB,IAC7DyB,EAAIe,UAAY3C,EAChB4B,EAAIgB,SAASN,EAAUG,EAAUD,EAAQF,EAAUI,EAAQD,KAvBzD,MAAAnC,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,YAAA0B,GAAA,MAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,qCAiDGnC,GAAM,IAAA8C,EACC7E,EAAgB8E,OAAO/C,GAAhCvD,EADQqG,EACRrG,EAAEC,EADMoG,EACNpG,EAAEd,EADIkH,EACJlH,EACT,aAAAoH,OAAcvG,EAAd,KAAAuG,OAAmBtG,EAAnB,KAAAsG,OAAwBpH,EAAxB,2CAGYiF,EAAMQ,EAAKC,GAIvB,IAHA,IACI2B,EAAWC,IACXC,EAAO,KACXC,EAAA,EAAAC,EAAuBrF,EAAvBoF,EAAAC,EAAA9H,OAAA6H,IAAoC,CAA/B,IAAItE,EAAUuE,EAAAD,GAEbE,EAAYzC,GAAOS,EAAKD,GADjBzD,EAASkB,GAEhByE,EAAYhH,KAAKiH,IAND,GAMqBF,GACrCC,EAAUN,IACZA,EAAaM,EACbJ,EAASrE,GAGb,OAAOqE,SAxFcM,iBE3BzB,SAASC,EAAarC,EAAKC,EAAKqC,GAI9B,IAHA,IAAIjF,EAAO,GACPkF,EAAQrH,KAAKsH,MAAMxC,EAAKsC,GAAQA,EAChCG,EAAMvH,KAAKsH,MAAMvC,EAAKqC,GAAQA,EACzBI,EAAEH,EAAOG,EAAED,EAAKC,GAAGJ,EAC1BjF,EAAK4B,KAAK,CAAEtD,KAAM+G,EACN9G,GAAI8G,EAAEJ,EACN5G,OAAQR,KAAKC,MAAoB,EAAdD,KAAKyH,UACxB9G,QAASX,KAAKC,MAAoB,GAAdD,KAAKyH,UACzB7G,QAASZ,KAAKC,MAAoB,GAAdD,KAAKyH,UACzB5G,QAASb,KAAKC,MAAoB,GAAdD,KAAKyH,UACzB3G,QAASd,KAAKC,MAAoB,IAAdD,KAAKyH,UACzB1G,SAAUf,KAAKC,MAAoB,GAAdD,KAAKyH,UAC1BzG,UAAWhB,KAAKC,MAAoB,GAAdD,KAAKyH,UAC3BxG,UAAWjB,KAAKC,MAAoB,GAAdD,KAAKyH,UAC3BvG,UAAWlB,KAAKC,MAAoB,EAAdD,KAAKyH,YAGzC,OAAOtF,EAGT,IAAMuF,EAAO,CAACpG,KAAK6F,EAAa,EAAE,QAAiB,MACrC5F,IAAI4F,EAAa,EAAE,QAAiB,OACpC3F,KAAK2F,EAAa,EAAE,QAAiB,SAG7CQ,cACJ,SAAAA,EAAY/F,GAAO,IAAAC,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAA4I,IACjB9F,EAAAhD,OAAAiD,EAAA,EAAAjD,CAAAE,KAAAF,OAAAkD,EAAA,EAAAlD,CAAA8I,GAAA3F,KAAAjD,KAAM6C,KACDsC,IAAMC,IAAMC,YACjBvC,EAAK+F,MAAQ,CAAC9C,KAAK,EACLC,KAAK,MACLC,KAAK,EACLC,KAAK,IACLX,MAAM,IACNC,OAAO,IACPsD,MAAO,UATJhG,wEAaV,IAAAiG,EAAA/I,KAAAgJ,EAGGhJ,KAAK6I,MAFT9C,EADCiD,EACDjD,KAAKC,EADJgD,EACIhD,KAAKC,EADT+C,EACS/C,KAAKC,EADd8C,EACc9C,KACfX,EAFCyD,EAEDzD,MAAMC,EAFLwD,EAEKxD,OAFLwD,EAEYF,MAEnB,OACErD,EAAApF,EAAAqF,cAAAD,EAAApF,EAAA4I,SAAA,KACExD,EAAApF,EAAAqF,cAAA,gBACED,EAAApF,EAAAqF,cAAA,uBACAD,EAAApF,EAAAqF,cAAA,mBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAK,IAAKC,IAAK,IAAKhF,MAAOmB,EACxC8D,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAAChE,MAAMiE,OAAOC,SAASH,EAAGI,OAAOtF,aAExEqB,EAAApF,EAAAqF,cAAA,oBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAK,IAAKC,IAAK,IAAKhF,MAAOoB,EACxC6D,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAAC/D,OAAOgE,OAAOC,SAASH,EAAGI,OAAOtF,aAEzEqB,EAAApF,EAAAqF,cAAA,kBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAK,EAAGC,IAAKpD,EAAK,EAAG2D,KAAM,KAAWvF,MAAO2B,EAC1DsD,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAACxD,KAAKyD,OAAOC,SAASH,EAAGI,OAAOtF,aAEvEqB,EAAApF,EAAAqF,cAAA,kBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAKpD,EAAK,EAAGqD,IAAK,QAAkBO,KAAM,KAAWvF,MAAO4B,EACzEqD,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAACvD,KAAKwD,OAAOC,SAASH,EAAGI,OAAOtF,aAEvEqB,EAAApF,EAAAqF,cAAA,uBAEED,EAAApF,EAAAqF,cAAA,YACGM,EAAKD,GAAM,IAAK,KAAK,GADxB,UAIFN,EAAApF,EAAAqF,cAAA,kBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAK,EAAGC,IAAKlD,EAAM9B,MAAO6B,EACvCoD,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAACtD,KAAKuD,OAAOC,SAASH,EAAGI,OAAOtF,aAEvEqB,EAAApF,EAAAqF,cAAA,kBAEED,EAAApF,EAAAqF,cAAA,SAAQwD,KAAK,QAAQC,IAAKlD,EAAMmD,IAAK,IAAKhF,MAAO8B,EACzCmD,SAAW,SAAAC,GAAE,OAAEP,EAAKQ,SAAS,CAACrD,KAAKsD,OAAOC,SAASH,EAAGI,OAAOtF,cAGzEqB,EAAApF,EAAAqF,cAAA,gBACED,EAAApF,EAAAqF,cAAA,yBACAD,EAAApF,EAAAqF,cAACkE,EAAD,CAAYrE,MAAOA,EACPC,OAAQA,EACRO,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACN9C,KAAMuF,aAnEVkB,aA2ElBC,IAASC,OAAOtE,EAAApF,EAAAqF,cAACsE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a3a5d5fb.chunk.js","sourcesContent":["import {bisect_left,bisect_right} from \"bisect\";\n\nclass LinearGradient {\n  constructor(stops){\n    if (stops.length===0){\n      throw new TypeError(\"EmptyArray\");\n    }\n    this._stops = stops.sort( (a,b)=>a.x-b.x )\n    this._Xs = this._stops.map( ({x})=>x );\n  }\n\n  getRGB(x){\n    let Xs = this._Xs;\n    let stops = this._stops;\n    if (stops.length===0) {\n      return null;\n    }\n    let leftIdx = bisect_left(Xs,x);\n    let rightIdx = bisect_right(Xs,x);\n    if (rightIdx-leftIdx>=2 ) {\n      let IdxOfInterest = Math.round((rightIdx+leftIdx)/2);\n      let stop = stops[IdxOfInterest];\n      let {r,g,b} = stop;\n      return {r,g,b};\n    }\n    else if (rightIdx-leftIdx===1){\n      if (leftIdx===-1){\n        let stop = stops[rightIdx];\n        let {r,g,b} = stop;\n        return {r,g,b};\n      }\n      else if (rightIdx===stops.length){\n        let stop = stops[leftIdx];\n        let {r,g,b} = stop;\n        return {r,g,b};\n      }\n      else {\n        let leftStop = stops[leftIdx];\n        let rightStop = stops[rightIdx];\n        let r = Math.round(leftStop.r+(rightStop.r-leftStop.r)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        let g = Math.round(leftStop.g+(rightStop.g-leftStop.g)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        let b = Math.round(leftStop.b+(rightStop.b-leftStop.b)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        return {r,g,b};\n      }\n    }\n    else {\n      throw new Error(\"ProgrammingError\")\n    }\n  }\n}\n\nexport default LinearGradient;\n","import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {memoize_one} from \"memoize\";\nimport {bisect_left,bisect_right} from \"bisect\";\nimport {toDomXCoord_Linear,toDomYCoord_Linear} from \"plot-utils\";\nimport LinearGradient from \"./LinearGradient\";\n\nconst YRANGE_LUT = {\n  \"0-50\": {from:0, to:50},\n  \"50-60\": {from:50, to:60},\n  \"60-70\": {from:60, to:70},\n  \"70-80\": {from:70, to:80},\n  \"80-90\": {from:80, to:90},\n  \"90-100\": {from:90, to:100},\n  \"100-110\": {from:100, to:110},\n  \"110-120\": {from:110, to:120},\n  \"120-200\": {from:120, to:200},\n  };\n\nconst YRANGES = Object.keys(YRANGE_LUT);\n\nconst SPAN_LUT = {\n  \"hour\": 3600*1000,\n  \"day\": 24*3600*1000,\n  \"week\": 7*24*3600*1000,\n  };\n\nconst RESOLUTIONS = Object.keys(SPAN_LUT);\n\nconst LINEAR_GRADIENT = new LinearGradient([{x:0,r:255,g:0,b:0},{x:100,r:255,g:255,b:0}])\n\nclass BoxBinPlot extends PureComponent {\n  constructor(props){\n    super(props);\n    this.ref = React.createRef();\n  }\n  \n  render(){\n    let {width,height} = this.props;\n    return (\n      <canvas ref={this.ref} width={width} height={height} style={{display:\"block\"}}></canvas>\n    );\n  }\n\n  componentDidMount(){\n    this.draw();\n  }\n\n  componentDidUpdate(){\n    this.draw();\n  }\n\n  draw(){\n    let { width,height,\n          minX,maxX,\n          minY,maxY,\n          data} = this.props;\n    let gridCells = this.getGridCells(data);\n    let resolution = this.getResolution(width,minX,maxX);\n    console.log(resolution);\n    // Clear plot\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,height);\n    // Draw\n    for (let cell of gridCells[resolution]){\n      let {startX,endX,startY,endY,color} = cell;\n      if (endX<=minX || startX>=maxX) {\n        continue;\n      }\n      let startDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,startX));\n      let endDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,endX));\n      let startDomY = Math.round(toDomXCoord_Linear(height,minY,maxY,endY));\n      let endDomY = Math.round(toDomXCoord_Linear(height,minY,maxY,startY));\n      ctx.fillStyle = color;\n      ctx.fillRect(startDomX,startDomY,endDomX-startDomX,endDomY-startDomY);\n    }\n  }\n\n  getGridCells = memoize_one( (data)=>{\n    let grids = { hour:[],\n                  day:[],\n                  week:[]\n                  };\n    for (let resolution of RESOLUTIONS) {\n      for (let column of data[resolution]) {\n        let startX = column[\"from\"];\n        let endX = column[\"to\"];\n        for (let row of YRANGES) {\n          let count = column[row];\n          let color = this.getColor(count);\n          let yRange = YRANGE_LUT[row];\n          let startY = yRange[\"from\"];\n          let endY = yRange[\"to\"];\n          grids[resolution].push({startX,endX,startY,endY,color});\n        }\n      }\n    }\n    return grids;\n  });\n\n  getColor(count){\n    let {r,g,b} = LINEAR_GRADIENT.getRGB(count);\n    return `rgb(${r},${g},${b})`;\n  }\n\n  getResolution(width,minX,maxX){\n    let targetCellWidth = 50;\n    let curMinDiff=Infinity;\n    let curRes=null;\n    for (let resolution of RESOLUTIONS) {\n      let span = SPAN_LUT[resolution];\n      let cellWidth = width/(maxX-minX)*span;\n      let diffWidth = Math.abs(targetCellWidth-cellWidth);\n      if (diffWidth<curMinDiff) {\n        curMinDiff = diffWidth;\n        curRes = resolution;\n      }\n    }\n    return curRes;\n  }\n}\n\nBoxBinPlot.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  minY: PropTypes.number.isRequired,\n  maxY: PropTypes.number.isRequired,\n}\n\nexport default BoxBinPlot;\n","import BoxBinPlot from \"./BoxBinPlot\";\n\nexport default BoxBinPlot;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport BoxBinPlot from \"./lib\";\n\nfunction generateData(minX,maxX,period) {\n  let data = [];\n  let start = Math.floor(minX/period)*period;\n  let end = Math.floor(maxX/period)*period;\n  for (let i=start; i<end; i+=period) {\n    data.push({ from: i,\n                to: i+period,\n                \"0-50\": Math.round(Math.random()*5),\n                \"50-60\": Math.round(Math.random()*10),\n                \"60-70\": Math.round(Math.random()*20),\n                \"70-80\": Math.round(Math.random()*40),\n                \"80-90\": Math.round(Math.random()*200),\n                \"90-100\": Math.round(Math.random()*40),\n                \"100-110\": Math.round(Math.random()*20),\n                \"110-120\": Math.round(Math.random()*10),\n                \"120-200\": Math.round(Math.random()*5)\n                });\n  }\n  return data;\n}\n\nconst DATA = {hour:generateData(0,365*24*3600*1000,60*60*1000),\n              day:generateData(0,365*24*3600*1000,24*60*60*1000),\n              week:generateData(0,365*24*3600*1000,7*24*60*60*1000),\n              };\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {minX:0,\n                  maxX:24*3600*1000,\n                  minY:0,\n                  maxY:200,\n                  width:800,\n                  height:400,\n                  data_: \"minute\",\n                  };\n  }\n  \n  render() {\n    let { minX,maxX,minY,maxY,\n          width,height,data_\n          } = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>props</legend>\n          <div>\n            width\n            <input  type=\"range\" min={600} max={800} value={width}\n                    onChange={ ev=>this.setState({width:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            height\n            <input  type=\"range\" min={200} max={600} value={height}\n                    onChange={ ev=>this.setState({height:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            minX\n            <input  type=\"range\" min={0} max={maxX-1} step={3600*1000} value={minX}\n                    onChange={ ev=>this.setState({minX:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            maxX\n            <input  type=\"range\" min={minX+1} max={365*24*3600*1000} step={3600*1000} value={maxX}\n                    onChange={ ev=>this.setState({maxX:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            maxX-minX\n            <div>\n            { (maxX-minX)/1000/3600/24 } days\n            </div>\n          </div>\n          <div>\n            minY\n            <input  type=\"range\" min={0} max={maxY} value={minY}\n                    onChange={ ev=>this.setState({minY:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            maxY\n            <input  type=\"range\" min={minY} max={200} value={maxY}\n                    onChange={ ev=>this.setState({maxY:Number.parseInt(ev.target.value)}) }/>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Results</legend>\n          <BoxBinPlot width={width}\n                      height={height}\n                      minX={minX}\n                      maxX={maxX}\n                      minY={minY}\n                      maxY={maxY}\n                      data={DATA}\n                      />\n        </fieldset>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}