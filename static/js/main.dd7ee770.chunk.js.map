{"version":3,"sources":["lib/BoxBinPlot.js","lib/LinearGradient.js","lib/index.js","index.js"],"names":["YRANGE_LUT","0-50","from","to","50-60","60-70","70-80","80-90","90-100","100-110","110-120","120-200","LINEAR_GRADIENT","LinearGradient","stops","Object","classCallCheck","this","length","TypeError","_stops","sort","a","b","x","_Xs","map","_ref","Xs","leftIdx","bisect_left","rightIdx","bisect_right","stop","Math","round","r","g","leftStop","rightStop","Error","BoxBinPlot","props","_this","possibleConstructorReturn","getPrototypeOf","call","getDataInRange","memoize_one","data","minX","maxX","sortedData","getSortedData","sortedFrom","getSortedFrom","sortedTo","getSortedTo","slice","_ref2","ref","React","createRef","_this$props","width","height","react_default","createElement","style","display","draw","_this$props2","minY","maxY","dataInRange","console","log","ctx","current","getContext","clearRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","startX","endX","startDomX","toDomXCoord_Linear","endDomX","_i","_Object$keys","keys","key","startY","endY","startDomY","toDomYCoord_Linear","endDomY","count","rgb","getRGB","color","concat","fillStyle","fillRect","err","return","PureComponent","generateData","period","start","floor","end","i","push","random","DATA","minute","hour","day","week","App","state","data_","_this2","_this$state","Fragment","type","min","max","onChange","ev","setState","Number","parseInt","target","lib","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd7ee770.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {memoize_one} from \"memoize\";\nimport {bisect_left,bisect_right} from \"bisect\";\nimport {toDomXCoord_Linear,toDomYCoord_Linear} from \"plot-utils\";\nimport LinearGradient from \"./LinearGradient\";\n\nconst YRANGE_LUT = {\n  \"0-50\": {from:0, to:50},\n  \"50-60\": {from:50, to:60},\n  \"60-70\": {from:60, to:70},\n  \"70-80\": {from:70, to:80},\n  \"80-90\": {from:80, to:90},\n  \"90-100\": {from:90, to:100},\n  \"100-110\": {from:100, to:110},\n  \"110-120\": {from:110, to:120},\n  \"120-200\": {from:120, to:200},\n  };\n\nconst LINEAR_GRADIENT = new LinearGradient([{x:0,r:255,g:255,b:255},{x:100,r:0,g:0,b:0}])\n\nclass BoxBinPlot extends PureComponent {\n  constructor(props){\n    super(props);\n    this.ref = React.createRef();\n  }\n  \n  render(){\n    let {width,height} = this.props;\n    return (\n      <canvas ref={this.ref} width={width} height={height} style={{display:\"block\"}}></canvas>\n    );\n  }\n\n  componentDidMount(){\n    this.draw();\n  }\n\n  componentDidUpdate(){\n    this.draw();\n  }\n\n  draw(){\n    let { width,height,\n          minX,maxX,\n          minY,maxY,\n          data} = this.props;\n    let dataInRange = this.getDataInRange(data,minX,maxX);\n    console.log(dataInRange);\n    // Clear plot\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,height);\n    // Draw\n    for (let row of dataInRange){\n      let startX = row.from;\n      let endX = row.to;\n      let startDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,startX));\n      let endDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,endX));\n      for (let key of Object.keys(YRANGE_LUT)){\n        let startY = YRANGE_LUT[key][\"from\"];\n        let endY = YRANGE_LUT[key][\"to\"];\n        let startDomY = Math.round(toDomYCoord_Linear(height,minY,maxY,endY));\n        let endDomY = Math.round(toDomYCoord_Linear(height,minY,maxY,startY));\n        let count = row[key];\n        let rgb = LINEAR_GRADIENT.getRGB(count);\n        let color = `rgb(${rgb.r},${rgb.g},${rgb.b})`;\n        ctx.fillStyle = color;\n        ctx.fillRect(startDomX,startDomY,endDomX-startDomX,endDomY-startDomY);\n      }\n    }\n  }\n\n  getDataInRange = memoize_one( (data,minX,maxX)=>{\n    let sortedData = this.getSortedData(data);\n    let sortedFrom = this.getSortedFrom(sortedData);\n    let sortedTo = this.getSortedTo(sortedData);\n    let leftIdx = bisect_right(sortedFrom,minX);\n    let rightIdx = bisect_left(sortedTo,maxX);\n    return sortedData.slice(leftIdx,rightIdx+1);\n  });\n\n  getSortedData = memoize_one( (data)=>{\n    return data.sort( (a,b)=>a.from-b.from );\n  });\n\n  getSortedFrom = memoize_one( (sortedData)=>{\n    return sortedData.map( ({from})=>from );\n  });\n  \n  getSortedTo = memoize_one( (sortedData)=>{\n    return sortedData.map( ({to})=>to );\n  });\n}\n\nBoxBinPlot.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  minY: PropTypes.number.isRequired,\n  maxY: PropTypes.number.isRequired,\n}\n\nexport default BoxBinPlot;\n","import {bisect_left,bisect_right} from \"bisect\";\n\nclass LinearGradient {\n  constructor(stops){\n    if (stops.length===0){\n      throw new TypeError(\"EmptyArray\");\n    }\n    this._stops = stops.sort( (a,b)=>a.x-b.x )\n    this._Xs = this._stops.map( ({x})=>x );\n  }\n\n  getRGB(x){\n    let Xs = this._Xs;\n    let stops = this._stops;\n    if (stops.length===0) {\n      return null;\n    }\n    let leftIdx = bisect_left(Xs,x);\n    let rightIdx = bisect_right(Xs,x);\n    if (rightIdx-leftIdx>=2 ) {\n      let IdxOfInterest = Math.round((rightIdx+leftIdx)/2);\n      let stop = stops[IdxOfInterest];\n      let {r,g,b} = stop;\n      return {r,g,b};\n    }\n    else if (rightIdx-leftIdx===1){\n      if (leftIdx===-1){\n        let stop = stops[rightIdx];\n        let {r,g,b} = stop;\n        return {r,g,b};\n      }\n      else if (rightIdx===stops.length){\n        let stop = stops[leftIdx];\n        let {r,g,b} = stop;\n        return {r,g,b};\n      }\n      else {\n        let leftStop = stops[leftIdx];\n        let rightStop = stops[rightIdx];\n        let r = Math.round(leftStop.r+(rightStop.r-leftStop.r)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        let g = Math.round(leftStop.g+(rightStop.g-leftStop.g)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        let b = Math.round(leftStop.b+(rightStop.b-leftStop.b)/(rightStop.x-leftStop.x)*(x-leftStop.x));\n        return {r,g,b};\n      }\n    }\n    else {\n      throw new Error(\"ProgrammingError\")\n    }\n  }\n}\n\nexport default LinearGradient;\n","import BoxBinPlot from \"./BoxBinPlot\";\n\nexport default BoxBinPlot;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport BoxBinPlot from \"./lib\";\n\nfunction generateData(minX,maxX,period) {\n  let data = [];\n  let start = Math.floor(minX/period)*period;\n  let end = Math.floor(maxX/period)*period;\n  for (let i=start; i<end; i+=period) {\n    data.push({ from: i,\n                to: i+period,\n                \"0-50\": Math.round(Math.random()*5),\n                \"50-60\": Math.round(Math.random()*10),\n                \"60-70\": Math.round(Math.random()*20),\n                \"70-80\": Math.round(Math.random()*40),\n                \"80-90\": Math.round(Math.random()*200),\n                \"90-100\": Math.round(Math.random()*40),\n                \"100-110\": Math.round(Math.random()*20),\n                \"110-120\": Math.round(Math.random()*10),\n                \"120-200\": Math.round(Math.random()*5)\n                });\n  }\n  return data;\n}\n\nconst DATA = {minute:generateData(0,365*24*3600*1000,60*1000),\n              hour:generateData(0,365*24*3600*1000,60*60*1000),\n              day:generateData(0,365*24*3600*1000,24*60*60*1000),\n              week:generateData(0,365*24*3600*1000,7*24*60*60*1000),\n              };\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {minX:0,\n                  maxX:24*3600*1000,\n                  minY:0,\n                  maxY:200,\n                  width:800,\n                  height:400,\n                  data_: \"minute\",\n                  };\n  }\n  \n  render() {\n    let { minX,maxX,minY,maxY,\n          width,height,data_\n          } = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>props</legend>\n          <div>\n            width\n            <input  type=\"range\" min={600} max={800} value={width}\n                    onChange={ ev=>this.setState({width:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            height\n            <input  type=\"range\" min={200} max={600} value={height}\n                    onChange={ ev=>this.setState({height:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            minX\n            <input  type=\"range\" min={0} max={maxX} value={minX}\n                    onChange={ ev=>this.setState({minX:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            maxX\n            <input  type=\"range\" min={minX} max={365*24*3600*1000} value={maxX}\n                    onChange={ ev=>this.setState({maxX:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            minY\n            <input  type=\"range\" min={0} max={maxY} value={minY}\n                    onChange={ ev=>this.setState({minY:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          <div>\n            maxY\n            <input  type=\"range\" min={minY} max={200} value={maxY}\n                    onChange={ ev=>this.setState({maxY:Number.parseInt(ev.target.value)}) }/>\n          </div>\n          {/*\n          <div>\n            data\n            Select bin size\n            <select value={data_} onChange={ ev=>this.setState({data_:ev.target.value}) }>\n              <option value=\"minute\">minute</option>\n              <option value=\"hour\">hour</option>\n              <option value=\"day\">day</option>\n              <option value=\"week\">week</option>\n            </select>\n          </div>\n          */}\n        </fieldset>\n        <fieldset>\n          <legend>Results</legend>\n          <BoxBinPlot width={width}\n                      height={height}\n                      minX={minX}\n                      maxX={maxX}\n                      minY={minY}\n                      maxY={maxY}\n                      data={DATA[\"week\"]}/>\n          <BoxBinPlot width={width}\n                      height={height}\n                      minX={minX}\n                      maxX={maxX}\n                      minY={minY}\n                      maxY={maxY}\n                      data={DATA[\"day\"]}/>\n          <BoxBinPlot width={width}\n                      height={height}\n                      minX={minX}\n                      maxX={maxX}\n                      minY={minY}\n                      maxY={maxY}\n                      data={DATA[\"hour\"]}/>\n        </fieldset>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}